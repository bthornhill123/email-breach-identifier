{"version":3,"sources":["basic-modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","BasicModal","props","React","useState","open","setOpen","Button","onClick","variant","marginBottom","Modal","onClose","Box","sx","Typography","component","parse","value","App","breaches","setBreaches","email","setEmail","fetchSecurityBreaches","a","fetch","method","response","json","data","Container","maxWidth","marginY","display","flexDirection","alignItems","Avatar","m","TextField","fullWidth","label","autoComplete","autoFocus","onChange","e","target","mt","mb","className","height","rowData","frameworkComponents","descriptionCellRenderer","defaultColDef","editable","filter","sortable","field","cellRenderer","params","domain","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAIMA,EAAQ,CACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAIQ,SAASC,EAAWC,GAC/B,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAIA,OACE,gCACE,cAACC,EAAA,EAAD,CAAQC,QALO,kBAAMF,GAAQ,IAKAG,QAAQ,YAAYlB,MAAO,CAAEmB,aAAc,OAAxE,8BACA,cAACC,EAAA,EAAD,CACEN,KAAMA,EACNO,QAPc,kBAAMN,GAAQ,IAQ5B,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,cAACO,EAAA,EAAD,CAAKC,GAAIvB,EAAT,SACE,cAACwB,EAAA,EAAD,CAAYC,UAAU,IAAtB,SACE,8BAAOC,YAAMf,EAAMgB,kBCiDlBC,MA1Ef,WACE,MAAgChB,IAAMC,SAA2B,IAAjE,mBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KAEMC,EAAqB,uCAAG,8BAAAC,EAAA,sEACLC,MAAM,wCAAD,OAA0CJ,GAAU,CAC9EK,OAAQ,QAFkB,cACtBC,EADsB,gBAKSA,EAASC,OALlB,OAKtBC,EALsB,OAM5BT,EAAYS,GANgB,2CAAH,qDAgB3B,OACE,eAACC,EAAA,EAAD,CAAWf,UAAU,OAAOgB,SAAS,KAArC,UACE,eAACnB,EAAA,EAAD,CAAKC,GAAI,CACHmB,QAAS,EACTC,QAAS,OACTC,cAAe,SACfC,WAAY,UAJlB,UAMI,cAACC,EAAA,EAAD,CAAQvB,GAAI,CAAEwB,EAAG,EAAGzC,QAAS,SAA7B,SACE,qCAEF,cAACkB,EAAA,EAAD,CAAYC,UAAU,KAAKP,QAAQ,KAAnC,kCAKJ,cAAC8B,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,gBACNC,aAAa,QACbC,WAAS,EACTzB,MAAOI,EACPsB,SAAU,SAACC,GAAD,OAAOtB,EAASsB,EAAEC,OAAO5B,UAErC,cAACX,EAAA,EAAD,CACEiC,WAAS,EACT/B,QAAQ,YACRK,GAAI,CAAEiC,GAAI,EAAGC,GAAI,GACjBxC,QAASgB,EAJX,oBAOA,qBAAKyB,UAAU,uBAAuB1D,MAAO,CAAEK,MAAO,OAAQsD,OAAQ,SAAtE,SACE,qBAAK3D,MAAO,CAAEK,MAAO,OAAQsD,OAAQ,QAArC,SACE,eAAC,cAAD,CACEC,QAAS/B,EACTgC,oBAAqB,CACnBC,wBAAyBpD,GAE3BqD,cAAe,CACbC,UAAU,EACVC,OAAQ,qBACRC,UAAU,GARd,UAUI,cAAC,eAAD,CAAcC,MAAM,OAAQC,aAlDf,SAACC,GACxB,MAAM,aAAN,OAAoBA,EAAO1C,MAA3B,qDAkDU,cAAC,eAAD,CAAcwC,MAAM,OAASC,aAhDhB,SAACC,GACxB,MAAM,wBAAN,OAA+BA,EAAO9B,KAAK+B,OAA3C,6BAAuED,EAAO9B,KAAKgC,KAAnF,WAgDU,cAAC,eAAD,CAAcJ,MAAM,cAAcC,aAAa,4BAC/C,cAAC,eAAD,CAAcD,MAAM,OAAOF,OAAO,kCC5DjCO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.33f752d3.chunk.js","sourcesContent":["import { Box, Button, Modal, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport parse from 'html-react-parser';\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n// @ts-ignore\r\nexport default function BasicModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n  \r\n    return (\r\n      <div>\r\n        <Button onClick={handleOpen} variant=\"contained\" style={{ marginBottom: \"4px\" }}>Open Description</Button>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography component=\"p\">\r\n              <div>{ parse(props.value) }</div>\r\n            </Typography>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }","import { Avatar, Box, Button, Container, TextField, Typography } from '@mui/material';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport React, { useState } from 'react';\nimport { SecurityBreach } from './models/securityBreach';\nimport BasicModal from './basic-modal';\n\nfunction App() {\n  const [breaches, setBreaches] = React.useState<SecurityBreach[]>([]);\n  const [email, setEmail] = useState('');\n\n  const fetchSecurityBreaches = async () => {\n    const response = await fetch(`http://localhost:8080/breaches?email=${ email }`, {\n      method: 'GET'\n    });\n\n    const data: SecurityBreach[] = await response.json();\n    setBreaches(data);\n  }\n\n  const logoCellRenderer = (params: any) => {\n    return `<img src=\"${params.value}\" style=\"height: 90%; max-width: 150px\"></img>`;\n  };\n  const nameCellRenderer = (params: any) => {\n    return `<a href=\"https://www.${params.data.domain}\" target=\"_blank\">${ params.data.name }</a>`;\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Box sx={{\n            marginY: 6,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}>\n          <Avatar sx={{ m: 1, bgcolor: 'black' }}>\n            <p>BT</p>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Security Breaches\n          </Typography>\n      </Box>\n\n      <TextField\n        fullWidth\n        label=\"Email Address\"\n        autoComplete=\"email\"\n        autoFocus\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <Button\n        fullWidth\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2 }}\n        onClick={fetchSecurityBreaches}>\n        Verify\n      </Button>\n      <div className=\"ag-theme-alpine-dark\" style={{ width: '100%', height: '400px' }}>\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          <AgGridReact\n            rowData={breaches}\n            frameworkComponents={{\n              descriptionCellRenderer: BasicModal,\n            }}\n            defaultColDef={{\n              editable: true,\n              filter: 'agTextColumnFilter',\n              sortable: true\n          }}>\n              <AgGridColumn field=\"logo\"  cellRenderer={ logoCellRenderer }></AgGridColumn>\n              <AgGridColumn field=\"name\"   cellRenderer={ nameCellRenderer }></AgGridColumn>\n              <AgGridColumn field=\"description\" cellRenderer=\"descriptionCellRenderer\"></AgGridColumn>\n              <AgGridColumn field=\"date\" filter=\"agDateColumnFilter\"></AgGridColumn>\n          </AgGridReact>\n          </div>\n      </div>\n    </Container>\n  );  \n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}